  name: Build Sing-Box Binary

  on:
    schedule:
      - cron: '0 0 * * *'
    workflow_dispatch:  # 允许手动触发

  jobs:
    check:
      runs-on: ubuntu-latest
      outputs:
        should_build: ${{ steps.check.outputs.changed }}
        latest_commit: ${{ steps.check.outputs.latest_commit }}
        version: ${{ steps.get_version.outputs.version }}
      steps:
        - name: Checkout code
          uses: actions/checkout@main

        - name: Check for updates
          id: check
          run: |
            latest_commit=$(git ls-remote https://github.com/SagerNet/sing-box.git refs/heads/main | cut -f1)
            echo "latest_commit=$latest_commit" >> $GITHUB_OUTPUT

            if [ ! -f .last_commit ] || [ "$latest_commit" != "$(cat .last_commit)" ]; then
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "changed=false" >> $GITHUB_OUTPUT
            fi

        - name: clone repository
          id: get_version
          run: |
            git clone --branch main https://github.com/SagerNet/sing-box.git
            cd sing-box
            version=$(git describe --tags)
            echo $version
            echo "version=$version" >> $GITHUB_OUTPUT
            cd .. && rm -rf sing-box

    build:
      needs: check
      if: needs.check.outputs.should_build == 'true'
      strategy:
        matrix:
          include:
            # windows
            - name: windows-amd64
              goos: windows
              goarch: amd64
              goamd64: v1
            - name: windows-amd64-v3
              goos: windows
              goarch: amd64
              goamd64: v3
            - name: windows-386
              goos: windows
              goarch: 386
            - name: windows-arm64
              goos: windows
              goarch: arm64
            - name: windows-arm32v7
              goos: windows
              goarch: arm
              goarm: 7
            
            # linux
            - name: linux-amd64
              goos: linux
              goarch: amd64
              goamd64: v1
            - name: linux-amd64-v3
              goos: linux
              goarch: amd64
              goamd64: v3
            - name: linux-386
              goos: linux
              goarch: 386
            - name: linux-arm64
              goos: linux
              goarch: arm64
            - name: linux-armv5
              goos: linux
              goarch: arm
              goarm: 5
            - name: linux-armv6
              goos: linux
              goarch: arm
              goarm: 6
            - name: linux-armv7
              goos: linux
              goarch: arm
              goarm: 7
            - name: linux-mips-softfloat
              goos: linux
              goarch: mips
              gomips: softfloat
            - name: linux-mips-hardfloat
              goos: linux
              goarch: mips
              gomips: hardfloat
            - name: linux-mipsel-softfloat
              goos: linux
              goarch: mipsle
              gomips: softfloat
            - name: linux-mipsel-hardfloat
              goos: linux
              goarch: mipsle
              gomips: hardfloat
            - name: linux-mips64
              goos: linux
              goarch: mips64
            - name: linux-mips64el
              goos: linux
              goarch: mips64le
            - name: linux-s390x
              goos: linux
              goarch: s390x
            # darwin
            - name: darwin-amd64
              goos: darwin
              goarch: amd64
              goamd64: v1
            - name: darwin-amd64-v3
              goos: darwin
              goarch: amd64
              goamd64: v3
            - name: darwin-arm64
              goos: darwin
              goarch: arm64
            # freebsd
            - name: freebsd-amd64
              goos: freebsd
              goarch: amd64
              goamd64: v1
            - name: freebsd-amd64-v3
              goos: freebsd
              goarch: amd64
              goamd64: v3
            - name: freebsd-386
              goos: freebsd
              goarch: 386
            - name: freebsd-arm64
              goos: freebsd
              goarch: arm64
      runs-on: ubuntu-latest
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOAMD64: ${{ matrix.goamd64 }}
        GOARM: ${{ matrix.goarm }}
        GOMIPS: ${{ matrix.gomips }}
        CGO_ENABLED: 0
        # TAGS: with_clash_api,with_quic
      steps:
        - name: Checkout monitored repository
          uses: actions/checkout@main
          with:
            repository: 'SagerNet/sing-box'
            ref: 'main'

        - name: Setup Go
          uses: actions/setup-go@v5
          with:
            go-version: '^1.25.1'

        - name: Build
          run: |
            git show --oneline -s
            make
            sing_box_filename=$(ls sing-box*)
            if [[ "$sing_box_filename" =~ \. ]]; then
              sing_box_basename=$(echo "$sing_box_filename" | cut -d '.' -f 1)
              sing_box_extension=$(echo "$sing_box_filename" | cut -d '.' -f 2-)
              mv "$sing_box_filename" "${sing_box_basename}-${{ matrix.name }}.${sing_box_extension}"
            else
              mv "$sing_box_filename" "${sing_box_filename}-${{ matrix.name }}"
            fi

        - name: debug
          run: ls -lh

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: sing-box-${{ matrix.name }}
            path: sing-box-${{ matrix.name }}*

    release:
      needs: [check, build]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@main
          
        - name: Download all artifacts
          uses: actions/download-artifact@v4
          with:
            path: artifacts

        - name: Release
          uses: softprops/action-gh-release@v2
          with:
            tag_name: ${{ needs.check.outputs.version }}
            name: Release ${{ needs.check.outputs.version }}
            files: artifacts/*/*

        - name: Update .last_commit
          run: |
            git config --local user.email "garfy@stu.gxnu.edu.cn"
            git config --local user.name "Garfy"
            echo "${{ needs.check.outputs.latest_commit }}" > .last_commit
            git add .last_commit
            git commit -m "Update .last_commit"
            git push
